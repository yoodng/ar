<?xml version="1.0" encoding="UTF-8"?>
<!-- <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd"> -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- 使用组件扫描controller -->
	<context:component-scan base-package="com.xzit.ar">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<!-- springMVC的注解驱动， 默认加载了许多参数的绑定方法，比如json解析器  -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter">
			</bean>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 视图解析器 jis解析默认用jstl，classpath下 要有jstl的jar包 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径 的 前缀、后缀 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 全局异常解析 -->
	<bean class="com.xzit.ar.common.exception.handler.GlobalExceptionHandler"/>
	
	<!-- 静态资源 -->
	<mvc:resources mapping="/assets/**" location="/assets/" />
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 登录认证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.xzit.ar.common.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
		<!-- 权限认证拦截器 -->
	</mvc:interceptors>
	
</beans>