<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.ar.common.mapper.role.RoleMapper">
    <resultMap id="BaseResultMap" type="com.xzit.ar.common.po.role.Role">
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_value" property="roleValue" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="state" property="state" jdbcType="CHAR"/>
        <result column="state_time" property="stateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">role_id, role_name, role_value, create_time, state, state_time</sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="queryRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
    </select>
    <select id="getRoleId" resultType="java.lang.Integer">select role_id
		from role
		where role_value=#{roleValue}</select>
    <select id="getRightsByRole" resultType="com.xzit.ar.common.po.role.Right">
		select r.right_id rightId, r.right_name rightName, r.state state, r.right_pos rightPos, 
				r.right_code rightCode
		from role_right rr, `right` r
		where rr.right_id=r.right_id and rr.role_id=#{roleId} and r.is_public='0'
	</select>
    <select id="getRoleValueByAdminId" resultType="map">
		select r.role_value roleValue
		from admin a, role r
		where a.role_id=r.role_id and a.admin_id=#{adminId}
	</select>
    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
    </select>


    <delete id="delete" parameterType="java.lang.Integer">delete from role
    where role_id = #{roleId,jdbcType=INTEGER}</delete>


    <insert id="save" parameterType="com.xzit.ar.common.po.role.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">role_id,</if>
            <if test="roleName != null">role_name,</if>
            <if test="roleValue != null">role_value,</if>
            <if test="createTime != null">create_time,</if>
            <if test="state != null">state,</if>
            <if test="stateTime != null">state_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">#{roleId,jdbcType=INTEGER},</if>
            <if test="roleName != null">#{roleName,jdbcType=VARCHAR},</if>
            <if test="roleValue != null">#{roleValue,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="state != null">#{state,jdbcType=CHAR},</if>
            <if test="stateTime != null">#{stateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="update" parameterType="com.xzit.ar.common.po.role.Role">
        update role
        <set>
            <if test="roleName != null">role_name = #{roleName,jdbcType=VARCHAR},</if>
            <if test="roleValue != null">role_value = #{roleValue,jdbcType=VARCHAR},</if>
            <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
            <if test="state != null">state = #{state,jdbcType=CHAR},</if>
            <if test="stateTime != null">state_time = #{stateTime,jdbcType=TIMESTAMP},</if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
</mapper>