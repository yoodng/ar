<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.ar.common.mapper.origin.OriginMapper">
    <resultMap id="BaseResultMap" type="com.xzit.ar.common.po.origin.Origin">
        <id column="origin_id" property="originId" jdbcType="INTEGER"/>
        <result column="origin_name" property="originName" jdbcType="VARCHAR"/>
        <result column="origin_type" property="originType" jdbcType="VARCHAR"/>
        <result column="origin_grade" property="originGrade" jdbcType="CHAR"/>
        <result column="members" property="members" jdbcType="INTEGER"/>
        <result column="origin_desc" property="originDesc" jdbcType="LONGVARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="mgr_id" property="mgrId" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="CHAR"/>
        <result column="state_time" property="stateTime" jdbcType="TIMESTAMP"/>
        <result column="exp1" property="exp1" jdbcType="VARCHAR"/>
        <result column="exp2" property="exp2" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
		origin_id, origin_name, origin_type, origin_grade, members, origin_desc,
		create_time, mgr_id, state, state_time, exp1, exp2
	</sql>

    <!--按id查询组织-->
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from origin
        where origin_id = #{originId,jdbcType=INTEGER}
    </select>

    <!--按id查询组织详情-->
    <select id="getOriginById" resultType="map" parameterType="java.lang.Integer">
        SELECT
        o.origin_id originId,
        o.origin_name originName,
        o.origin_type originType,
        o.origin_grade originGrade,
        o.members members,
        o.origin_desc originDesc,
		o.create_time createTime,
		o.mgr_id mgrId,
		u.true_name mgrName,
		u.introduce mgrIntroduce,
		img.image_path mgrPortrait,
		o.state state,
		o.state_time stateTime

        FROM
        origin o,
        `user` u,
        image img

        WHERE
        o.mgr_id=u.user_id
        AND u.image_id=img.image_id
        AND origin_id = #{originId,jdbcType=INTEGER}

    </select>

    <!--按组织类型查询组织列表-->
    <select id="loadOriginByOriginType" resultType="map">
		SELECT origin_id originId, origin_name originName, members members, state_time stateTime
		FROM origin
		WHERE origin_type=#{originType} AND state='A'
	</select>

    <!--查询组织最近的消息-->
    <select id="getOriginInfosByType" resultType="map">
        SELECT
        info.info_title infoTitle,
        info.content content,
        info.thumb_image infoImg,
        info.is_top isTop,
        info.comments comments,
        info.create_time createTime,
        info.info_id infoId,
        info.user_id userId, u.true_name trueName

        FROM
        information info,
        `user` u

        <where>
            info.user_id = u.user_id
            AND info.origin_id=#{originId}
            AND info.info_type=#{infoType}
            AND info.state='A'

            ORDER BY
            info.is_top DESC ,
            info.create_time DESC
        </where>
    </select>

    <!--查询组织成员列表-->
    <select id="getOriginMember" parameterType="java.lang.Integer" resultType="map">
		SELECT
			u.user_id userId,
			u.true_name trueName,
			img.image_path portrait,
			uo.state state
		FROM
			`user` u,
			user_origin uo,
			image img
		WHERE
			uo.origin_id=#{originId}
			AND uo.state='A'
			AND uo.user_id=u.user_id
			AND u.image_id=img.image_id
	</select>

    <!--查询组织成员列表-->
    <select id="getOriginDirectory" parameterType="java.lang.Integer" resultType="map">

		SELECT
			u.user_id userId,
			u.true_name trueName,
			img.image_path portrait,
			ui.sex sex,
			ui.age age,
			ui.birthday birthday,
			ui.phone phone,
			ui.email email,
			ui.microblog microblog,
			ui.qq qq,
			ui.wechat wechat,
			ui.address address
		FROM 
			user_info ui,
			`user` u,
			user_origin uo,
			image img
		WHERE
			uo.origin_id=#{originId}
			AND uo.state='A'
			AND uo.user_id=u.user_id
			AND u.user_id=ui.user_id
			AND u.image_id=img.image_id
			
	</select>

    <select id="queryOrigin" resultType="map">
        SELECT
        o.origin_id originId,
        o.origin_name originName,
        o.origin_type originType,
        o.origin_desc originDesc,
        o.origin_grade originGrade,
        o.members members,
        o.create_time createTime,
        o.state state,
        o.state_time stateTime,
        o.mgr_id mgrId,
        u.true_name mgrName

        FROM
        origin o,
        `user` u

        <where>
            o.mgr_id=u.user_id
            <if test="queryMap != null and queryMap.originType != null">
                AND o.origin_type=#{queryMap.originType}
            </if>
            <if test="queryMap != null and queryMap.query != null">
                AND (o.origin_name LIKE #{queryMap.query})
            </if>
            <if test="queryMap != null and queryMap.originGrade != null">
                AND o.origin_grade=#{queryMap.originGrade}
            </if>
            <if test="queryMap != null and queryMap.state != null">
                AND o.state=#{queryMap.state}
            </if>
        </where>
        ORDER BY
        o.state_time DESC
    </select>


    <!--删除组织-->
    <delete id="delete" parameterType="java.lang.Integer">delete from origin
    where origin_id = #{originId,jdbcType=INTEGER}</delete>

    <insert id="save" parameterType="com.xzit.ar.common.po.origin.Origin">
        insert into origin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="originId != null">origin_id,</if>
            <if test="originName != null">origin_name,</if>
            <if test="originType != null">origin_type,</if>
            <if test="originGrade != null">origin_grade,</if>
            <if test="originDesc != null">origin_desc,</if>
            <if test="members != null">members,</if>
            <if test="createTime != null">create_time,</if>
            <if test="mgrId != null">mgr_id,</if>
            <if test="state != null">state,</if>
            <if test="stateTime != null">state_time,</if>
            <if test="exp1 != null">exp1,</if>
            <if test="exp2 != null">exp2,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="originId != null">#{originId,jdbcType=INTEGER},</if>
            <if test="originName != null">#{originName,jdbcType=VARCHAR},</if>
            <if test="originType != null">#{originType,jdbcType=VARCHAR},</if>
            <if test="originGrade != null">#{originGrade,jdbcType=CHAR},</if>
            <if test="originDesc != null">#{originDesc,jdbcType=LONGVARCHAR},</if>
            <if test="members != null">#{members,jdbcType=INTEGER},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="mgrId != null">#{mgrId,jdbcType=INTEGER},</if>
            <if test="state != null">#{state,jdbcType=CHAR},</if>
            <if test="stateTime != null">#{stateTime,jdbcType=TIMESTAMP},</if>
            <if test="exp1 != null">#{exp1,jdbcType=VARCHAR},</if>
            <if test="exp2 != null">#{exp2,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <update id="update" parameterType="com.xzit.ar.common.po.origin.Origin">
        update origin
        <set>
            <if test="originName != null">origin_name = #{originName,jdbcType=VARCHAR},</if>
            <if test="originType != null">origin_type = #{originType,jdbcType=VARCHAR},</if>
            <if test="originGrade != null">origin_grade = #{originGrade,jdbcType=CHAR},</if>
            <if test="originDesc != null">origin_desc = #{originDesc,jdbcType=LONGVARCHAR},</if>
            <if test="members != null">members = #{members,jdbcType=INTEGER},</if>
            <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
            <if test="mgrId != null">mgr_id = #{mgrId,jdbcType=INTEGER},</if>
            <if test="state != null">state = #{state,jdbcType=CHAR},</if>
            <if test="stateTime != null">state_time = #{stateTime,jdbcType=TIMESTAMP},</if>
            <if test="exp1 != null">exp1 = #{exp1,jdbcType=VARCHAR},</if>
            <if test="exp2 != null">exp2 = #{exp2,jdbcType=VARCHAR},</if>
        </set>
        where origin_id = #{originId,jdbcType=INTEGER}
    </update>

    <update id="updateState">
		update origin 
		set state=#{state}
		where origin_id=#{id}
	</update>
</mapper>